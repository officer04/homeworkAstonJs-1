// task  №1

/* 
Массивы в JavaScript являются нестандартными, потому что они могут содержать в себе различные типы данных, а не только числа, 
как в большинстве других языков программирования. В JavaScript массивы являются объектами, и могут содержать любые типы данных - строки, числа, объекты, функции и т.д. 
Это позволяет создавать гибкие и многогранные структуры данных, но также может вызвать некоторые сложности в работе с ними.

Кроме того, массивы в JavaScript могут быть рассчитаны как ассоциативные массивы, где индексами элементов могут быть не только числа, но и строки. 
Это позволяет использовать массивы для создания объектов с ключами и значениями, что также делает их универсальными, но может приводить к некоторым путаницам.

Таким образом, массивы в JavaScript являются "неправильными" в том смысле, что они не отражают классическую структуру данных массива, 
а сочетают в себе различные типы данных и могут быть использованы в различных целях, включая создание объектов и ассоциативных массивов.
*/

// task №2

const obj = { item: 'some value' };

function logger() {
  console.log(`I output only external context: ${this.item}`);
}

logger.call(obj);
logger.apply(obj);

const log = logger.bind(obj);
log();
